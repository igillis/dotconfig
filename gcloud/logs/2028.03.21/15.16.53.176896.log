2028-03-21 15:16:53,188 DEBUG    root            Loaded Command Group: ['gcloud', 'projects']
2028-03-21 15:16:53,193 DEBUG    root            Loaded Command Group: ['gcloud', 'projects', 'describe']
2028-03-21 15:16:53,194 DEBUG    root            Running [gcloud.projects.describe] with arguments: [--account: "ian@clarahomecare.com", --configuration: "default", --format: "value(name)", PROJECT_ID_OR_NUMBER: "clara-production-430316"]
2028-03-21 15:16:53,214 DEBUG    google.auth.transport.requests Making request: POST https://oauth2.googleapis.com/token
2028-03-21 15:16:53,257 DEBUG    urllib3.connectionpool Starting new HTTPS connection (1): oauth2.googleapis.com:443
2028-03-21 15:16:53,436 DEBUG    google.auth.transport.requests Making request: POST https://oauth2.googleapis.com/token
2028-03-21 15:16:53,439 DEBUG    urllib3.connectionpool Starting new HTTPS connection (2): oauth2.googleapis.com:443
2028-03-21 15:16:53,483 DEBUG    root            (gcloud.projects.describe) There was a problem refreshing your current auth tokens: HTTPSConnectionPool(host='oauth2.googleapis.com', port=443): Max retries exceeded with url: /token (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1129)')))
Please run:

  $ gcloud auth login

to obtain new credentials.

If you have already logged in with a different account, run:

  $ gcloud config set account ACCOUNT

to select an already authenticated account to use.
Traceback (most recent call last):
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/urllib3/connectionpool.py", line 466, in _make_request
    self._validate_conn(conn)
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/urllib3/connectionpool.py", line 1098, in _validate_conn
    conn.connect()
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/urllib3/connection.py", line 652, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/urllib3/connection.py", line 805, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/urllib3/util/ssl_.py", line 470, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/urllib3/util/ssl_.py", line 514, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
  File "/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/ssl.py", line 500, in wrap_socket
    return self.sslsocket_class._create(
  File "/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/ssl.py", line 1040, in _create
    self.do_handshake()
  File "/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/ssl.py", line 1309, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1129)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/urllib3/connectionpool.py", line 789, in urlopen
    response = self._make_request(
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/urllib3/connectionpool.py", line 490, in _make_request
    raise new_e
urllib3.exceptions.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1129)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/urllib3/connectionpool.py", line 843, in urlopen
    retries = retries.increment(
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/urllib3/util/retry.py", line 520, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='oauth2.googleapis.com', port=443): Max retries exceeded with url: /token (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1129)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/google/auth/transport/requests.py", line 186, in __call__
    response = self.session.request(
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/transport.py", line 269, in WrappedRequest
    response = orig_request(*modified_args, **modified_kwargs)
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/requests.py", line 247, in WrappedRequest
    return orig_request_method(*args, **kwargs)
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='oauth2.googleapis.com', port=443): Max retries exceeded with url: /token (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1129)')))

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/calliope/cli.py", line 981, in Execute
    resources = calliope_command.Run(cli=self, args=args)
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/calliope/backend.py", line 934, in Run
    resources = command_instance.Run(args)
  File "/Users/iangillis/google-cloud-sdk/lib/surface/projects/describe.py", line 51, in Run
    return projects_api.Get(project_ref)
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/api_lib/cloudresourcemanager/projects_api.py", line 124, in Get
    client = projects_util.GetClient(api_version)
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/api_lib/cloudresourcemanager/projects_util.py", line 56, in GetClient
    return apis.GetClientInstance(_API_NAME, version)
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/api_lib/util/apis.py", line 270, in GetClientInstance
    return apis_internal._GetClientInstance(
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/api_lib/util/apis_internal.py", line 169, in _GetClientInstance
    http_client = transports.GetApitoolsTransport(
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/transports.py", line 80, in GetApitoolsTransport
    session = requests.GetSession(
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/requests.py", line 82, in GetSession
    session = request_wrapper.WrapQuota(session, enable_resource_quota,
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/requests.py", line 127, in WrapQuota
    quota_project = self.QuotaProject(enable_resource_quota,
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/transport.py", line 54, in QuotaProject
    creds = store.LoadIfEnabled(allow_account_impersonation, use_google_auth)
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 636, in LoadIfEnabled
    return Load(
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 876, in Load
    cred = _Load(
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 1093, in _Load
    RefreshIfAlmostExpire(cred)
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 1451, in RefreshIfAlmostExpire
    RefreshIfExpireWithinWindow(credentials, window=_CREDENTIALS_EXPIRY_WINDOW)
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 1447, in RefreshIfExpireWithinWindow
    Refresh(credentials)
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 1133, in Refresh
    _RefreshGoogleAuth(credentials, is_impersonated_credential,
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/store.py", line 1338, in _RefreshGoogleAuth
    credentials.refresh(request_client)
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/creds.py", line 962, in _WrappedRefresh
    orig_refresh(request)
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 104, in refresh
    return self._Refresh(request)
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 175, in _Refresh
    access_token, refresh_token, expiry, grant_response = _RefreshGrant(
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 270, in _RefreshGrant
    response_data = _TokenEndpointRequestWithRetry(request, token_uri, body)
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/util/retry.py", line 312, in DecoratedFunction
    exceptions.reraise(to_reraise[1], tb=to_reraise[2])
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/exceptions.py", line 149, in reraise
    six.reraise(type(exc_value), exc_value, tb)
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/six/__init__.py", line 719, in reraise
    raise value
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/util/retry.py", line 182, in TryFunc
    return func(*args, **kwargs), None
  File "/Users/iangillis/google-cloud-sdk/lib/googlecloudsdk/core/credentials/google_auth_credentials.py", line 326, in _TokenEndpointRequestWithRetry
    response = request(method='POST', url=token_uri, headers=headers, body=body)
  File "/Users/iangillis/google-cloud-sdk/lib/third_party/google/auth/transport/requests.py", line 192, in __call__
    raise new_exc from caught_exc
google.auth.exceptions.TransportError: HTTPSConnectionPool(host='oauth2.googleapis.com', port=443): Max retries exceeded with url: /token (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1129)')))
2028-03-21 15:16:53,522 ERROR    root            (gcloud.projects.describe) There was a problem refreshing your current auth tokens: HTTPSConnectionPool(host='oauth2.googleapis.com', port=443): Max retries exceeded with url: /token (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1129)')))
Please run:

  $ gcloud auth login

to obtain new credentials.

If you have already logged in with a different account, run:

  $ gcloud config set account ACCOUNT

to select an already authenticated account to use.
